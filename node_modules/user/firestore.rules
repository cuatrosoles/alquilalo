rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Función para verificar si el usuario está autenticado
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Función para verificar si el usuario es el propietario del documento
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Reglas para la colección de usuarios
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isOwner(userId);
    }

    // Reglas para la colección de alquileres
    match /rentals/{rentalId} {
      allow read: if isAuthenticated() && (
        resource.data.ownerId == request.auth.uid || 
        resource.data.renterId == request.auth.uid
      );
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (
        resource.data.ownerId == request.auth.uid || 
        resource.data.renterId == request.auth.uid
      );
      allow delete: if isAuthenticated() && resource.data.ownerId == request.auth.uid;
    }

    // Reglas para la colección de items
    match /items/{itemId} {
      allow read: if true; // Lectura pública
      allow write: if isAuthenticated() && resource.data.ownerId == request.auth.uid;
    }

    // Reglas para la colección de categorías
    match /categories/{categoryId} {
      allow read: if true; // Lectura pública
      allow write: if false; // Solo administradores pueden escribir
    }

    // Reglas para la colección de mensajes
    match /messages/{messageId} {
      allow read: if isAuthenticated() && (
        resource.data.senderId == request.auth.uid || 
        resource.data.receiverId == request.auth.uid
      );
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && resource.data.senderId == request.auth.uid;
    }
  }
} 